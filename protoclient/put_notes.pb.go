// Code generated by protoc-gen-go. DO NOT EDIT.
// source: put_notes.proto

package put_notes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PutNotes struct {
	Notes                []*PutNotes_Note `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PutNotes) Reset()         { *m = PutNotes{} }
func (m *PutNotes) String() string { return proto.CompactTextString(m) }
func (*PutNotes) ProtoMessage()    {}
func (*PutNotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b281f41874fc62d0, []int{0}
}

func (m *PutNotes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutNotes.Unmarshal(m, b)
}
func (m *PutNotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutNotes.Marshal(b, m, deterministic)
}
func (m *PutNotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutNotes.Merge(m, src)
}
func (m *PutNotes) XXX_Size() int {
	return xxx_messageInfo_PutNotes.Size(m)
}
func (m *PutNotes) XXX_DiscardUnknown() {
	xxx_messageInfo_PutNotes.DiscardUnknown(m)
}

var xxx_messageInfo_PutNotes proto.InternalMessageInfo

func (m *PutNotes) GetNotes() []*PutNotes_Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

type PutNotes_Note struct {
	// noteの配列id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 前のNoteからの実行待ち時間
	DeltaMicrosec        int32    `protobuf:"varint,2,opt,name=deltaMicrosec,proto3" json:"deltaMicrosec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutNotes_Note) Reset()         { *m = PutNotes_Note{} }
func (m *PutNotes_Note) String() string { return proto.CompactTextString(m) }
func (*PutNotes_Note) ProtoMessage()    {}
func (*PutNotes_Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_b281f41874fc62d0, []int{0, 0}
}

func (m *PutNotes_Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutNotes_Note.Unmarshal(m, b)
}
func (m *PutNotes_Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutNotes_Note.Marshal(b, m, deterministic)
}
func (m *PutNotes_Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutNotes_Note.Merge(m, src)
}
func (m *PutNotes_Note) XXX_Size() int {
	return xxx_messageInfo_PutNotes_Note.Size(m)
}
func (m *PutNotes_Note) XXX_DiscardUnknown() {
	xxx_messageInfo_PutNotes_Note.DiscardUnknown(m)
}

var xxx_messageInfo_PutNotes_Note proto.InternalMessageInfo

func (m *PutNotes_Note) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PutNotes_Note) GetDeltaMicrosec() int32 {
	if m != nil {
		return m.DeltaMicrosec
	}
	return 0
}

func init() {
	proto.RegisterType((*PutNotes)(nil), "PutNotes")
	proto.RegisterType((*PutNotes_Note)(nil), "PutNotes.Note")
}

func init() {
	proto.RegisterFile("put_notes.proto", fileDescriptor_b281f41874fc62d0)
}

var fileDescriptor_b281f41874fc62d0 = []byte{
	// 123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0x2d, 0x89,
	0xcf, 0xcb, 0x2f, 0x49, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xca, 0xe3, 0xe2, 0x08,
	0x28, 0x2d, 0xf1, 0x03, 0x89, 0x08, 0xa9, 0x70, 0xb1, 0x82, 0xa5, 0x24, 0x18, 0x15, 0x98, 0x35,
	0xb8, 0x8d, 0xf8, 0xf4, 0x60, 0x32, 0x7a, 0x20, 0x32, 0x08, 0x22, 0x29, 0x65, 0xc3, 0xc5, 0x02,
	0xe2, 0x0a, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x31, 0x65,
	0xa6, 0x08, 0xa9, 0x70, 0xf1, 0xa6, 0xa4, 0xe6, 0x94, 0x24, 0xfa, 0x66, 0x26, 0x17, 0xe5, 0x17,
	0xa7, 0x26, 0x4b, 0x30, 0x81, 0xa5, 0x50, 0x05, 0x93, 0xd8, 0xc0, 0xd6, 0x1a, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x5a, 0x15, 0xf1, 0x8f, 0x89, 0x00, 0x00, 0x00,
}
